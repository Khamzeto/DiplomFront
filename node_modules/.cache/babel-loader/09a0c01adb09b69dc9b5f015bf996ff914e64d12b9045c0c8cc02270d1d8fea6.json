{"ast":null,"code":"// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS'; // Action creators\n\nexport const back = (payload = {}) => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate\n});\nexport const init = (payload = {}) => {\n  const action = {\n    type: INIT\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\nexport const navigate = payload => {\n  const action = {\n    type: NAVIGATE,\n    routeName: payload.routeName\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\nexport const setParams = payload => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true\n});","map":{"version":3,"names":["BACK","INIT","NAVIGATE","SET_PARAMS","back","payload","type","key","immediate","init","action","params","navigate","routeName","setParams","preserveFocus"],"sources":["/Users/khamzat/Desktop/ChesuFront/node_modules/@react-navigation/core/lib/module/NavigationActions.ts"],"sourcesContent":["export interface NavigationParams {\n  [key: string]: any;\n}\n\nexport interface NavigationNavigateActionPayload {\n  routeName: string;\n  params?: NavigationParams;\n\n  // The action to run inside the sub-router\n  action?: NavigationNavigateAction;\n\n  key?: string;\n}\n\nexport interface NavigationNavigateAction\n  extends NavigationNavigateActionPayload {\n  type: 'Navigation/NAVIGATE';\n}\n\nexport interface NavigationBackActionPayload {\n  key?: string | null;\n  immediate?: boolean;\n}\n\nexport interface NavigationBackAction extends NavigationBackActionPayload {\n  type: 'Navigation/BACK';\n}\n\nexport interface NavigationInitActionPayload {\n  params?: NavigationParams;\n}\n\nexport interface NavigationInitAction extends NavigationInitActionPayload {\n  type: 'Navigation/INIT';\n}\n\nexport interface NavigationSetParamsActionPayload {\n  // The key of the route where the params should be set\n  key: string;\n\n  // The new params to merge into the existing route params\n  params?: NavigationParams;\n}\n\nexport interface NavigationSetParamsAction\n  extends NavigationSetParamsActionPayload {\n  type: 'Navigation/SET_PARAMS';\n  preserveFocus: true;\n}\n\n// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS';\n\n// Action creators\nexport const back = (\n  payload: NavigationBackActionPayload = {}\n): NavigationBackAction => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n});\n\nexport const init = (payload: NavigationInitActionPayload = {}) => {\n  const action: NavigationInitAction = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\n\nexport const navigate = (\n  payload: NavigationNavigateActionPayload\n): NavigationNavigateAction => {\n  const action: NavigationNavigateAction = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\n\nexport const setParams = (\n  payload: NavigationSetParamsActionPayload\n): NavigationSetParamsAction => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true,\n});\n"],"mappings":"AAkDA;AACA,OAAO,MAAMA,IAAI,GAAG,iBAAb;AACP,OAAO,MAAMC,IAAI,GAAG,iBAAb;AACP,OAAO,MAAMC,QAAQ,GAAG,qBAAjB;AACP,OAAO,MAAMC,UAAU,GAAG,uBAAnB,C,CAEP;;AACA,OAAO,MAAMC,IAAI,GAAGA,CAClBC,OAAoC,GAAG,EADrB,MAEQ;EAC1BC,IAAI,EAAEN,IADoB;EAE1BO,GAAG,EAAEF,OAAO,CAACE,GAFa;EAG1BC,SAAS,EAAEH,OAAO,CAACG;AAHO,CAFR,CAAb;AAQP,OAAO,MAAMC,IAAI,GAAGA,CAACJ,OAAoC,GAAG,EAAxC,KAA+C;EACjE,MAAMK,MAA4B,GAAG;IACnCJ,IAAI,EAAEL;EAD6B,CAArC;EAGA,IAAII,OAAO,CAACM,MAAZ,EAAoB;IAClBD,MAAM,CAACC,MAAP,GAAgBN,OAAO,CAACM,MAAxB;EACD;EACD,OAAOD,MAAP;AACD,CARM;AAUP,OAAO,MAAME,QAAQ,GACnBP,OADsB,IAEO;EAC7B,MAAMK,MAAgC,GAAG;IACvCJ,IAAI,EAAEJ,QADiC;IAEvCW,SAAS,EAAER,OAAO,CAACQ;EAFoB,CAAzC;EAIA,IAAIR,OAAO,CAACM,MAAZ,EAAoB;IAClBD,MAAM,CAACC,MAAP,GAAgBN,OAAO,CAACM,MAAxB;EACD;EACD,IAAIN,OAAO,CAACK,MAAZ,EAAoB;IAClBA,MAAM,CAACA,MAAP,GAAgBL,OAAO,CAACK,MAAxB;EACD;EACD,IAAIL,OAAO,CAACE,GAAZ,EAAiB;IACfG,MAAM,CAACH,GAAP,GAAaF,OAAO,CAACE,GAArB;EACD;EACD,OAAOG,MAAP;AACD,CAjBM;AAmBP,OAAO,MAAMI,SAAS,GACpBT,OADuB,KAEQ;EAC/BC,IAAI,EAAEH,UADyB;EAE/BI,GAAG,EAAEF,OAAO,CAACE,GAFkB;EAG/BI,MAAM,EAAEN,OAAO,CAACM,MAHe;EAI/BI,aAAa,EAAE;AAJgB,CAFR,CAAlB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}