{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n}; /* eslint-env browser */\n\nexports.default = createBrowserApp;\nvar _history = require('history');\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _core = require('@react-navigation/core');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint-disable import/no-commonjs */\nconst queryString = require('query-string');\nconst getPathAndParamsFromLocation = location => {\n  const path = encodeURI(location.pathname.substr(1));\n  const params = queryString.parse(location.search);\n  return {\n    path,\n    params\n  };\n};\nconst matchPathAndParams = (a, b) => {\n  if (a.path !== b.path) {\n    return false;\n  }\n  if (queryString.stringify(a.params) !== queryString.stringify(b.params)) {\n    return false;\n  }\n  return true;\n};\nfunction getHistory(history) {\n  if (typeof history === 'string') {\n    switch (history) {\n      case 'browser':\n        return (0, _history.createBrowserHistory)();\n      case 'hash':\n        return (0, _history.createHashHistory)();\n      case 'memory':\n        return (0, _history.createMemoryHistory)();\n      default:\n        throw new Error('@react-navigation/web: createBrowserApp() Invalid value for options.history ' + history);\n    }\n  }\n  return history || (0, _history.createBrowserHistory)();\n}\nfunction createBrowserApp(App, {\n  history: historyOption\n} = {}) {\n  const history = getHistory(historyOption);\n  let currentPathAndParams = getPathAndParamsFromLocation(history.location);\n  const initAction = App.router.getActionForPathAndParams(currentPathAndParams.path, currentPathAndParams.params) || _core.NavigationActions.init();\n  const setHistoryListener = dispatch => {\n    history.listen(location => {\n      const pathAndParams = getPathAndParamsFromLocation(location);\n      if (matchPathAndParams(pathAndParams, currentPathAndParams)) {\n        return;\n      }\n      currentPathAndParams = pathAndParams;\n      const action = App.router.getActionForPathAndParams(pathAndParams.path, pathAndParams.params);\n      if (action) {\n        dispatch(action);\n      } else {\n        dispatch(initAction);\n      }\n    });\n  };\n  class WebApp extends _react2.default.Component {\n    constructor(...args) {\n      var _temp;\n      return _temp = super(...args), this.state = {\n        nav: App.router.getStateForAction(initAction)\n      }, this._title = document.title, this._actionEventSubscribers = new Set(), this.dispatch = action => {\n        const lastState = this.state.nav;\n        const newState = App.router.getStateForAction(action, lastState);\n        const dispatchEvents = () => this._actionEventSubscribers.forEach(subscriber => subscriber({\n          type: 'action',\n          action,\n          state: newState,\n          lastState\n        }));\n        if (newState && newState !== lastState) {\n          this.setState({\n            nav: newState\n          }, () => {\n            this._onNavigationStateChange(lastState, newState, action);\n            dispatchEvents();\n          });\n          const pathAndParams = App.router.getPathAndParamsForState && App.router.getPathAndParamsForState(newState);\n          if (pathAndParams && !matchPathAndParams(pathAndParams, currentPathAndParams)) {\n            currentPathAndParams = pathAndParams;\n            history.push(`/${pathAndParams.path}?${queryString.stringify(pathAndParams.params)}`);\n          }\n        } else {\n          dispatchEvents();\n        }\n      }, _temp;\n    }\n    componentDidMount() {\n      setHistoryListener(this.dispatch);\n      this.updateTitle();\n      this._actionEventSubscribers.forEach(subscriber => subscriber({\n        type: 'action',\n        action: initAction,\n        state: this.state.nav,\n        lastState: null\n      }));\n    }\n    componentDidUpdate() {\n      this.updateTitle();\n    }\n    updateTitle() {\n      const {\n        state\n      } = this._navigation;\n      const childKey = state.routes[state.index].key;\n      const activeNav = this._navigation.getChildNavigation(childKey);\n      const opts = App.router.getScreenOptions(activeNav);\n      this._title = opts.title || opts.headerTitle;\n      if (this._title) {\n        document.title = this._title;\n      }\n    }\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n    render() {\n      this._navigation = (0, _core.getNavigation)(App.router, this.state.nav, this.dispatch, this._actionEventSubscribers, () => this.props.screenProps, () => this._navigation);\n      return _react2.default.createElement(_core.NavigationProvider, {\n        value: this._navigation\n      }, _react2.default.createElement(App, _extends({}, this.props, {\n        navigation: this._navigation\n      })));\n    }\n  }\n  return WebApp;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","createBrowserApp","_history","require","_react","_react2","_interopRequireDefault","_core","obj","__esModule","queryString","getPathAndParamsFromLocation","location","path","encodeURI","pathname","substr","params","parse","search","matchPathAndParams","a","b","stringify","getHistory","history","createBrowserHistory","createHashHistory","createMemoryHistory","Error","App","historyOption","currentPathAndParams","initAction","router","getActionForPathAndParams","NavigationActions","init","setHistoryListener","dispatch","listen","pathAndParams","action","WebApp","Component","constructor","args","_temp","state","nav","getStateForAction","_title","document","title","_actionEventSubscribers","Set","lastState","newState","dispatchEvents","forEach","subscriber","type","setState","_onNavigationStateChange","getPathAndParamsForState","push","componentDidMount","updateTitle","componentDidUpdate","_navigation","childKey","routes","index","activeNav","getChildNavigation","opts","getScreenOptions","headerTitle","prevNav","props","onNavigationStateChange","render","getNavigation","screenProps","createElement","NavigationProvider","navigation"],"sources":["/Users/khamzat/Desktop/ChesuFront/node_modules/@react-navigation/web/dist/createBrowserApp.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-env browser */\n\nexports.default = createBrowserApp;\n\nvar _history = require('history');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@react-navigation/core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-commonjs */\nconst queryString = require('query-string');\n\nconst getPathAndParamsFromLocation = location => {\n  const path = encodeURI(location.pathname.substr(1));\n  const params = queryString.parse(location.search);\n  return { path, params };\n};\n\nconst matchPathAndParams = (a, b) => {\n  if (a.path !== b.path) {\n    return false;\n  }\n  if (queryString.stringify(a.params) !== queryString.stringify(b.params)) {\n    return false;\n  }\n  return true;\n};\n\nfunction getHistory(history) {\n  if (typeof history === 'string') {\n    switch (history) {\n      case 'browser':\n        return (0, _history.createBrowserHistory)();\n      case 'hash':\n        return (0, _history.createHashHistory)();\n      case 'memory':\n        return (0, _history.createMemoryHistory)();\n      default:\n        throw new Error('@react-navigation/web: createBrowserApp() Invalid value for options.history ' + history);\n    }\n  }\n  return history || (0, _history.createBrowserHistory)();\n}\n\nfunction createBrowserApp(App, { history: historyOption } = {}) {\n  const history = getHistory(historyOption);\n  let currentPathAndParams = getPathAndParamsFromLocation(history.location);\n  const initAction = App.router.getActionForPathAndParams(currentPathAndParams.path, currentPathAndParams.params) || _core.NavigationActions.init();\n\n  const setHistoryListener = dispatch => {\n    history.listen(location => {\n      const pathAndParams = getPathAndParamsFromLocation(location);\n      if (matchPathAndParams(pathAndParams, currentPathAndParams)) {\n        return;\n      }\n      currentPathAndParams = pathAndParams;\n      const action = App.router.getActionForPathAndParams(pathAndParams.path, pathAndParams.params);\n      if (action) {\n        dispatch(action);\n      } else {\n        dispatch(initAction);\n      }\n    });\n  };\n\n  class WebApp extends _react2.default.Component {\n    constructor(...args) {\n      var _temp;\n\n      return _temp = super(...args), this.state = { nav: App.router.getStateForAction(initAction) }, this._title = document.title, this._actionEventSubscribers = new Set(), this.dispatch = action => {\n        const lastState = this.state.nav;\n        const newState = App.router.getStateForAction(action, lastState);\n        const dispatchEvents = () => this._actionEventSubscribers.forEach(subscriber => subscriber({\n          type: 'action',\n          action,\n          state: newState,\n          lastState\n        }));\n        if (newState && newState !== lastState) {\n          this.setState({ nav: newState }, () => {\n            this._onNavigationStateChange(lastState, newState, action);\n            dispatchEvents();\n          });\n          const pathAndParams = App.router.getPathAndParamsForState && App.router.getPathAndParamsForState(newState);\n          if (pathAndParams && !matchPathAndParams(pathAndParams, currentPathAndParams)) {\n            currentPathAndParams = pathAndParams;\n            history.push(`/${pathAndParams.path}?${queryString.stringify(pathAndParams.params)}`);\n          }\n        } else {\n          dispatchEvents();\n        }\n      }, _temp;\n    }\n\n    componentDidMount() {\n      setHistoryListener(this.dispatch);\n      this.updateTitle();\n      this._actionEventSubscribers.forEach(subscriber => subscriber({\n        type: 'action',\n        action: initAction,\n        state: this.state.nav,\n        lastState: null\n      }));\n    }\n    componentDidUpdate() {\n      this.updateTitle();\n    }\n    updateTitle() {\n      const { state } = this._navigation;\n      const childKey = state.routes[state.index].key;\n      const activeNav = this._navigation.getChildNavigation(childKey);\n      const opts = App.router.getScreenOptions(activeNav);\n      this._title = opts.title || opts.headerTitle;\n      if (this._title) {\n        document.title = this._title;\n      }\n    }\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    render() {\n      this._navigation = (0, _core.getNavigation)(App.router, this.state.nav, this.dispatch, this._actionEventSubscribers, () => this.props.screenProps, () => this._navigation);\n      return _react2.default.createElement(\n        _core.NavigationProvider,\n        { value: this._navigation },\n        _react2.default.createElement(App, _extends({}, this.props, { navigation: this._navigation }))\n      );\n    }\n  }\n  return WebApp;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}