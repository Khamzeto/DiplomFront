{"ast":null,"code":"export default async function getCroppedImg64(imageSrc,pixelCrop){let rotation=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;const image=new Image();image.src=imageSrc;await new Promise(r=>{image.onload=r;});const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');let canvasWidth,canvasHeight;if(rotation===90||rotation===270){canvasWidth=pixelCrop.height;canvasHeight=pixelCrop.width;}else{canvasWidth=pixelCrop.width;canvasHeight=pixelCrop.height;}canvas.width=canvasWidth;canvas.height=canvasHeight;if(rotation===90||rotation===270){ctx.translate(canvasWidth/2,canvasHeight/2);ctx.rotate(rotation*Math.PI/180);ctx.translate(-canvasWidth/2,-canvasHeight/2);}else{// Устанавливаем поворот\nctx.translate(canvasWidth/2,canvasHeight/2);ctx.rotate(rotation*Math.PI/180);ctx.translate(-canvasWidth/2,-canvasHeight/2);}// Рассчитываем координаты вырезаемой области с учетом поворота\nlet cropX,cropY;if(rotation===90){cropX=pixelCrop.y;cropY=image.height-pixelCrop.x-pixelCrop.width;}else if(rotation===180){cropX=image.width-pixelCrop.x-pixelCrop.width;cropY=image.height-pixelCrop.y-pixelCrop.height;}else if(rotation===270){cropX=image.width-pixelCrop.y-pixelCrop.height;cropY=pixelCrop.x;}else{cropX=pixelCrop.x;cropY=pixelCrop.y;}// Рисуем изображение с учетом поворота и вырезаемой области\nctx.drawImage(image,cropX,cropY,pixelCrop.width,pixelCrop.height,0,0,pixelCrop.width,pixelCrop.height);// Получаем данные изображения в формате base64\nconst base64Image=canvas.toDataURL('image/jpeg');// Возвращаем строку base64\nreturn base64Image;}","map":{"version":3,"names":["getCroppedImg64","imageSrc","pixelCrop","rotation","arguments","length","undefined","image","Image","src","Promise","r","onload","canvas","document","createElement","ctx","getContext","canvasWidth","canvasHeight","height","width","translate","rotate","Math","PI","cropX","cropY","y","x","drawImage","base64Image","toDataURL"],"sources":["/Users/khamzat/Desktop/Diplom/ChesuFront/src/Components/getImage64.jsx"],"sourcesContent":["export default async function getCroppedImg64(imageSrc, pixelCrop, rotation = 0) {\n  const image = new Image();\n  image.src = imageSrc;\n  await new Promise(r => {\n    image.onload = r;\n  });\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  let canvasWidth, canvasHeight;\n  if (rotation === 90 || rotation === 270) {\n    canvasWidth = pixelCrop.height;\n    canvasHeight = pixelCrop.width;\n  } else {\n    canvasWidth = pixelCrop.width;\n    canvasHeight = pixelCrop.height;\n  }\n\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n\n  if (rotation === 90 || rotation === 270) {\n    ctx.translate(canvasWidth / 2, canvasHeight / 2);\n    ctx.rotate((rotation * Math.PI) / 180);\n    ctx.translate(-canvasWidth / 2, -canvasHeight / 2);\n  } else {\n    // Устанавливаем поворот\n    ctx.translate(canvasWidth / 2, canvasHeight / 2);\n    ctx.rotate((rotation * Math.PI) / 180);\n    ctx.translate(-canvasWidth / 2, -canvasHeight / 2);\n  }\n  // Рассчитываем координаты вырезаемой области с учетом поворота\n  let cropX, cropY;\n  if (rotation === 90) {\n    cropX = pixelCrop.y;\n    cropY = image.height - pixelCrop.x - pixelCrop.width;\n  } else if (rotation === 180) {\n    cropX = image.width - pixelCrop.x - pixelCrop.width;\n    cropY = image.height - pixelCrop.y - pixelCrop.height;\n  } else if (rotation === 270) {\n    cropX = image.width - pixelCrop.y - pixelCrop.height;\n    cropY = pixelCrop.x;\n  } else {\n    cropX = pixelCrop.x;\n    cropY = pixelCrop.y;\n  }\n\n  // Рисуем изображение с учетом поворота и вырезаемой области\n  ctx.drawImage(\n    image,\n    cropX,\n    cropY,\n    pixelCrop.width,\n    pixelCrop.height,\n    0,\n    0,\n    pixelCrop.width,\n    pixelCrop.height\n  );\n\n  // Получаем данные изображения в формате base64\n  const base64Image = canvas.toDataURL('image/jpeg');\n\n  // Возвращаем строку base64\n  return base64Image;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}